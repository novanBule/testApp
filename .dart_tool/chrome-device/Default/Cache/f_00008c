define(['dart_sdk'], (function load__packages__faker__src__data__user_agent__user_agent_dart(dart_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var user_agent = Object.create(dart.library);
  var $_get = dartx._get;
  var $add = dartx.add;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_set = dartx._set;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    JSArrayOfUserAgent: () => (T.JSArrayOfUserAgent = dart.constFn(_interceptors.JSArray$(user_agent.UserAgent)))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    LinkedMapOfString$dynamic: () => (T.LinkedMapOfString$dynamic = dart.constFn(_js_helper.LinkedMap$(core.String, dart.dynamic)))(),
    UserAgentToMapOfString$dynamic: () => (T.UserAgentToMapOfString$dynamic = dart.constFn(dart.fnType(T.MapOfString$dynamic(), [user_agent.UserAgent])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = [
    "file:///C:/Users/AFK/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/faker-2.0.0/lib/src/data/user_agent/user_agent.dart",
    "package:faker/src/data/user_agent/user_agent.dart"
  ];
  var userAgents$ = dart.privateName(user_agent, "UserAgents.userAgents");
  user_agent.UserAgents = class UserAgents extends core.Object {
    get userAgents() {
      return this[userAgents$];
    }
    set userAgents(value) {
      this[userAgents$] = value;
    }
    toJson() {
      let data = new (T.LinkedMapOfString$dynamic()).new();
      if (this.userAgents != null) {
        data[$_set]("userAgents", dart.nullCheck(this.userAgents)[$map](T.MapOfString$dynamic(), dart.fn(v => {
          if (v == null) dart.nullFailed(I[0], 19, 50, "v");
          return v.toJson();
        }, T.UserAgentToMapOfString$dynamic()))[$toList]());
      }
      return data;
    }
  };
  (user_agent.UserAgents.new = function(opts) {
    let userAgents = opts && 'userAgents' in opts ? opts.userAgents : null;
    this[userAgents$] = userAgents;
    ;
  }).prototype = user_agent.UserAgents.prototype;
  (user_agent.UserAgents.fromJson = function(json) {
    if (json == null) dart.nullFailed(I[0], 7, 44, "json");
    this[userAgents$] = null;
    if (json[$_get]("userAgents") != null) {
      this.userAgents = T.JSArrayOfUserAgent().of([]);
      dart.dsend(json[$_get]("userAgents"), 'forEach', [dart.fn(v => {
          dart.nullCheck(this.userAgents)[$add](new user_agent.UserAgent.fromJson(T.MapOfString$dynamic().as(v)));
        }, T.dynamicToNull())]);
    }
  }).prototype = user_agent.UserAgents.prototype;
  dart.addTypeTests(user_agent.UserAgents);
  dart.addTypeCaches(user_agent.UserAgents);
  dart.setMethodSignature(user_agent.UserAgents, () => ({
    __proto__: dart.getMethods(user_agent.UserAgents.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(user_agent.UserAgents, I[1]);
  dart.setFieldSignature(user_agent.UserAgents, () => ({
    __proto__: dart.getFields(user_agent.UserAgents.__proto__),
    userAgents: dart.fieldType(dart.nullable(core.List$(user_agent.UserAgent)))
  }));
  var folder$ = dart.privateName(user_agent, "UserAgent.folder");
  var description$ = dart.privateName(user_agent, "UserAgent.description");
  var userAgent$ = dart.privateName(user_agent, "UserAgent.userAgent");
  var appCodename$ = dart.privateName(user_agent, "UserAgent.appCodename");
  var appName$ = dart.privateName(user_agent, "UserAgent.appName");
  var appVersion$ = dart.privateName(user_agent, "UserAgent.appVersion");
  var platform$ = dart.privateName(user_agent, "UserAgent.platform");
  var vendor$ = dart.privateName(user_agent, "UserAgent.vendor");
  var vendorSub$ = dart.privateName(user_agent, "UserAgent.vendorSub");
  var browserName$ = dart.privateName(user_agent, "UserAgent.browserName");
  var browserMajor$ = dart.privateName(user_agent, "UserAgent.browserMajor");
  var browserVersion$ = dart.privateName(user_agent, "UserAgent.browserVersion");
  var deviceModel$ = dart.privateName(user_agent, "UserAgent.deviceModel");
  var deviceType$ = dart.privateName(user_agent, "UserAgent.deviceType");
  var deviceVendor$ = dart.privateName(user_agent, "UserAgent.deviceVendor");
  var engineName$ = dart.privateName(user_agent, "UserAgent.engineName");
  var engineVersion$ = dart.privateName(user_agent, "UserAgent.engineVersion");
  var osName$ = dart.privateName(user_agent, "UserAgent.osName");
  var osVersion$ = dart.privateName(user_agent, "UserAgent.osVersion");
  var cpuArchitecture$ = dart.privateName(user_agent, "UserAgent.cpuArchitecture");
  user_agent.UserAgent = class UserAgent extends core.Object {
    get folder() {
      return this[folder$];
    }
    set folder(value) {
      this[folder$] = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      this[description$] = value;
    }
    get userAgent() {
      return this[userAgent$];
    }
    set userAgent(value) {
      this[userAgent$] = value;
    }
    get appCodename() {
      return this[appCodename$];
    }
    set appCodename(value) {
      this[appCodename$] = value;
    }
    get appName() {
      return this[appName$];
    }
    set appName(value) {
      this[appName$] = value;
    }
    get appVersion() {
      return this[appVersion$];
    }
    set appVersion(value) {
      this[appVersion$] = value;
    }
    get platform() {
      return this[platform$];
    }
    set platform(value) {
      this[platform$] = value;
    }
    get vendor() {
      return this[vendor$];
    }
    set vendor(value) {
      this[vendor$] = value;
    }
    get vendorSub() {
      return this[vendorSub$];
    }
    set vendorSub(value) {
      this[vendorSub$] = value;
    }
    get browserName() {
      return this[browserName$];
    }
    set browserName(value) {
      this[browserName$] = value;
    }
    get browserMajor() {
      return this[browserMajor$];
    }
    set browserMajor(value) {
      this[browserMajor$] = value;
    }
    get browserVersion() {
      return this[browserVersion$];
    }
    set browserVersion(value) {
      this[browserVersion$] = value;
    }
    get deviceModel() {
      return this[deviceModel$];
    }
    set deviceModel(value) {
      this[deviceModel$] = value;
    }
    get deviceType() {
      return this[deviceType$];
    }
    set deviceType(value) {
      this[deviceType$] = value;
    }
    get deviceVendor() {
      return this[deviceVendor$];
    }
    set deviceVendor(value) {
      this[deviceVendor$] = value;
    }
    get engineName() {
      return this[engineName$];
    }
    set engineName(value) {
      this[engineName$] = value;
    }
    get engineVersion() {
      return this[engineVersion$];
    }
    set engineVersion(value) {
      this[engineVersion$] = value;
    }
    get osName() {
      return this[osName$];
    }
    set osName(value) {
      this[osName$] = value;
    }
    get osVersion() {
      return this[osVersion$];
    }
    set osVersion(value) {
      this[osVersion$] = value;
    }
    get cpuArchitecture() {
      return this[cpuArchitecture$];
    }
    set cpuArchitecture(value) {
      this[cpuArchitecture$] = value;
    }
    toJson() {
      let data = new (T.LinkedMapOfString$dynamic()).new();
      data[$_set]("folder", this.folder);
      data[$_set]("description", this.description);
      data[$_set]("userAgent", this.userAgent);
      data[$_set]("appCodename", this.appCodename);
      data[$_set]("appName", this.appName);
      data[$_set]("appVersion", this.appVersion);
      data[$_set]("platform", this.platform);
      data[$_set]("vendor", this.vendor);
      data[$_set]("vendorSub", this.vendorSub);
      data[$_set]("browserName", this.browserName);
      data[$_set]("browserMajor", this.browserMajor);
      data[$_set]("browserVersion", this.browserVersion);
      data[$_set]("deviceModel", this.deviceModel);
      data[$_set]("deviceType", this.deviceType);
      data[$_set]("deviceVendor", this.deviceVendor);
      data[$_set]("engineName", this.engineName);
      data[$_set]("engineVersion", this.engineVersion);
      data[$_set]("osName", this.osName);
      data[$_set]("osVersion", this.osVersion);
      data[$_set]("cpuArchitecture", this.cpuArchitecture);
      return data;
    }
  };
  (user_agent.UserAgent.new = function(opts) {
    let folder = opts && 'folder' in opts ? opts.folder : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let userAgent = opts && 'userAgent' in opts ? opts.userAgent : null;
    let appCodename = opts && 'appCodename' in opts ? opts.appCodename : null;
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let appVersion = opts && 'appVersion' in opts ? opts.appVersion : null;
    let platform = opts && 'platform' in opts ? opts.platform : null;
    let vendor = opts && 'vendor' in opts ? opts.vendor : null;
    let vendorSub = opts && 'vendorSub' in opts ? opts.vendorSub : null;
    let browserName = opts && 'browserName' in opts ? opts.browserName : null;
    let browserMajor = opts && 'browserMajor' in opts ? opts.browserMajor : null;
    let browserVersion = opts && 'browserVersion' in opts ? opts.browserVersion : null;
    let deviceModel = opts && 'deviceModel' in opts ? opts.deviceModel : null;
    let deviceType = opts && 'deviceType' in opts ? opts.deviceType : null;
    let deviceVendor = opts && 'deviceVendor' in opts ? opts.deviceVendor : null;
    let engineName = opts && 'engineName' in opts ? opts.engineName : null;
    let engineVersion = opts && 'engineVersion' in opts ? opts.engineVersion : null;
    let osName = opts && 'osName' in opts ? opts.osName : null;
    let osVersion = opts && 'osVersion' in opts ? opts.osVersion : null;
    let cpuArchitecture = opts && 'cpuArchitecture' in opts ? opts.cpuArchitecture : null;
    this[folder$] = folder;
    this[description$] = description;
    this[userAgent$] = userAgent;
    this[appCodename$] = appCodename;
    this[appName$] = appName;
    this[appVersion$] = appVersion;
    this[platform$] = platform;
    this[vendor$] = vendor;
    this[vendorSub$] = vendorSub;
    this[browserName$] = browserName;
    this[browserMajor$] = browserMajor;
    this[browserVersion$] = browserVersion;
    this[deviceModel$] = deviceModel;
    this[deviceType$] = deviceType;
    this[deviceVendor$] = deviceVendor;
    this[engineName$] = engineName;
    this[engineVersion$] = engineVersion;
    this[osName$] = osName;
    this[osVersion$] = osVersion;
    this[cpuArchitecture$] = cpuArchitecture;
    ;
  }).prototype = user_agent.UserAgent.prototype;
  (user_agent.UserAgent.fromJson = function(json) {
    if (json == null) dart.nullFailed(I[0], 69, 43, "json");
    this[cpuArchitecture$] = null;
    this[osVersion$] = null;
    this[osName$] = null;
    this[engineVersion$] = null;
    this[engineName$] = null;
    this[deviceVendor$] = null;
    this[deviceType$] = null;
    this[deviceModel$] = null;
    this[browserVersion$] = null;
    this[browserMajor$] = null;
    this[browserName$] = null;
    this[vendorSub$] = null;
    this[vendor$] = null;
    this[platform$] = null;
    this[appVersion$] = null;
    this[appName$] = null;
    this[appCodename$] = null;
    this[userAgent$] = null;
    this[description$] = null;
    this[folder$] = null;
    this.folder = T.StringN().as(json[$_get]("folder"));
    this.description = T.StringN().as(json[$_get]("description"));
    this.userAgent = T.StringN().as(json[$_get]("userAgent"));
    this.appCodename = T.StringN().as(json[$_get]("appCodename"));
    this.appName = T.StringN().as(json[$_get]("appName"));
    this.appVersion = T.StringN().as(json[$_get]("appVersion"));
    this.platform = T.StringN().as(json[$_get]("platform"));
    this.vendor = T.StringN().as(json[$_get]("vendor"));
    this.vendorSub = T.StringN().as(json[$_get]("vendorSub"));
    this.browserName = T.StringN().as(json[$_get]("browserName"));
    this.browserMajor = T.StringN().as(json[$_get]("browserMajor"));
    this.browserVersion = T.StringN().as(json[$_get]("browserVersion"));
    this.deviceModel = T.StringN().as(json[$_get]("deviceModel"));
    this.deviceType = T.StringN().as(json[$_get]("deviceType"));
    this.deviceVendor = T.StringN().as(json[$_get]("deviceVendor"));
    this.engineName = T.StringN().as(json[$_get]("engineName"));
    this.engineVersion = T.StringN().as(json[$_get]("engineVersion"));
    this.osName = T.StringN().as(json[$_get]("osName"));
    this.osVersion = T.StringN().as(json[$_get]("osVersion"));
    this.cpuArchitecture = T.StringN().as(json[$_get]("cpuArchitecture"));
  }).prototype = user_agent.UserAgent.prototype;
  dart.addTypeTests(user_agent.UserAgent);
  dart.addTypeCaches(user_agent.UserAgent);
  dart.setMethodSignature(user_agent.UserAgent, () => ({
    __proto__: dart.getMethods(user_agent.UserAgent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(user_agent.UserAgent, I[1]);
  dart.setFieldSignature(user_agent.UserAgent, () => ({
    __proto__: dart.getFields(user_agent.UserAgent.__proto__),
    folder: dart.fieldType(dart.nullable(core.String)),
    description: dart.fieldType(dart.nullable(core.String)),
    userAgent: dart.fieldType(dart.nullable(core.String)),
    appCodename: dart.fieldType(dart.nullable(core.String)),
    appName: dart.fieldType(dart.nullable(core.String)),
    appVersion: dart.fieldType(dart.nullable(core.String)),
    platform: dart.fieldType(dart.nullable(core.String)),
    vendor: dart.fieldType(dart.nullable(core.String)),
    vendorSub: dart.fieldType(dart.nullable(core.String)),
    browserName: dart.fieldType(dart.nullable(core.String)),
    browserMajor: dart.fieldType(dart.nullable(core.String)),
    browserVersion: dart.fieldType(dart.nullable(core.String)),
    deviceModel: dart.fieldType(dart.nullable(core.String)),
    deviceType: dart.fieldType(dart.nullable(core.String)),
    deviceVendor: dart.fieldType(dart.nullable(core.String)),
    engineName: dart.fieldType(dart.nullable(core.String)),
    engineVersion: dart.fieldType(dart.nullable(core.String)),
    osName: dart.fieldType(dart.nullable(core.String)),
    osVersion: dart.fieldType(dart.nullable(core.String)),
    cpuArchitecture: dart.fieldType(dart.nullable(core.String))
  }));
  dart.trackLibraries("packages/faker/src/data/user_agent/user_agent.dart", {
    "package:faker/src/data/user_agent/user_agent.dart": user_agent
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["user_agent.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../../packages/faker/src/data/user_agent/user_agent.dart.lib.js"}');
  // Exports:
  return {
    src__data__user_agent__user_agent: user_agent
  };
}));

//# sourceMappingURL=user_agent.dart.lib.js.map
